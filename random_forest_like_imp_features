dummies_col=['yummy', 'convenient', 'spicy', 'fattening', 'greasy', 'fast', 'cheap', 'tasty', 'expensive', 'healthy', 'disgusting']


df_dummies = pd.get_dummies(df, columns=dummies_col, drop_first=True)

#print(len(list(df_dummies.columns)))

print(df_dummies.columns)

from sklearn.model_selection import cross_val_score, KFold
#from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
X = df_dummies.drop(['Like', 'VisitFrequency', 'Age', 'age_group', 'visits_per_year', 'Gender'], axis=1).values
y = df_dummies["Like"].values



names = df_dummies.drop(['Like', 'VisitFrequency', 'Age', 'age_group', 'visits_per_year', 'Gender'], axis=1).columns
print(X)
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

rf = RandomForestRegressor(n_estimators=100, random_state=42)
rf.fit(X_train, y_train)

#print(len(rf.feature_importances_))

print(rf.feature_importances_)

rf_importance_dict={}

rf_importance_dict["Features"]=names

rf_importance_dict["Importance"]=rf.feature_importances_

print(rf_importance_dict)

rf_importance_df=pd.DataFrame(rf_importance_dict)

sorted_rf_importance_df = rf_importance_df.sort_values(by=["Importance"], ascending=False)


rf_importance_barplot=sns.barplot(y="Features", x="Importance", data=sorted_rf_importance_df )
plt.title("Most important determinant of Like/Rating (Random Forest)")
plt.show()
